<div class="col-sm-12">
  <%= form_for recipe do |f| %>
    <div class="row">
      <div class="col-sm-1">
        <%= f.label :name %>
      </div>
      <div class="col-sm-4">
        <%= f.text_field :name %>
      </div>
    </div>
    <div class="row">
      <div class="col-sm-1">
        <%= f.label :description %>
      </div>
      <div class="col-sm-4">
        <%= f.text_area :description %>
      </div>
    </div>
    <div class="row">
      <div class="col-sm-1">
        <%= f.label :total_time %>
      </div>
      <div class="col-sm-4">
        <%= f.number_field :total_time %> minutes
      </div>
    </div>

    <div class='row'>
      <div class='col-sm-12'>
        <h3>
          Ingredients:
          <%= link_to(image_tag('add-icon.png', size:'16', title: 'Add ingredient'), '#', class:'js-addIngredient') if policy(recipe).update? %>
        </h3>
        <table id='ingredientTable'>
          <tbody>
            <%= f.fields_for :recipe_ingredients do |ff| %>
              <tr id='recipe-ingredient-id-<%=ff.object.id%>'>
                <%= render partial: 'recipe_ingredients/form_ingredient', locals: {f: ff} %>
                <td><%= link_to(image_tag('delete-icon.png', size:'16', title: 'Delete ingredient'), '#', class:'js-deleteIngredient', data: {'recipe-ingredient-id':ff.object.id}) if policy(recipe).update? %></td>
              </tr>
            <% end %>
          </tbody>
        </table>
      </div>
    </div>
    <div class='row'>
      <div class='col-sm-12'>
        <h3>
          Steps:
          <%= link_to(image_tag('add-icon.png', size:'16', title: 'Add step'), '#', class:'js-addStep') if policy(recipe).update? %>
          <%= link_to(image_tag('resequence-icon.png', size:'16', title: 'Renumber steps'), '#', class:'js-renumberSteps') if policy(recipe).update? %>
  <!-- link_to image_tag('resequence-icon.png', size:'16', title: 'Renumber steps'), renumber_steps_recipe_path(recipe) if policy(recipe).update? -->
        </h3>
        <table id='stepTable'>
          <tbody>
            <%= f.fields_for :recipe_steps do |ff| %>
              <tr id='recipe-step-id-<%=ff.object.id%>'>
                <%= render partial: 'recipe_steps/form_step', locals: {f: ff} %>
                <td><%= link_to(image_tag('delete-icon.png', size:'16', title: 'Delete step'), '#', class:'js-deleteStep', data: {'recipe-step-id':ff.object.id}) if policy(recipe).update? %></td>
              </tr>
            <% end %>
          </tbody>
        </table>
      </div>
    </div>
    <p><%= f.submit %></p>
  <% end %>
</div>

<script type='text/javascript' charset='utf-8'>
$(function () {
  $('.js-addIngredient').on('click', function(e) {
    var ingredientTable = $('#ingredientTable tbody');
    var newRow   = ingredientTable.find('tr:first').clone();
    var newRowId = ingredientTable.find('tr').length;
    var newId   = `recipe_recipe_ingredients_attributes_${newRowId}_`;
    var newName = `recipe_ingredients_attributes][${newRowId}]`;

    // These are the attributes that need to be edited when cloning a table row.
    // The index values need updating to a new, unique, value -
    //   "recipe[recipe_ingredients_attributes][0][ingredient_id]"
    //   "recipe_recipe_ingredients_attributes_0_ingredient_id"
    // and existing values need to be cleared out -
    //   data-recipe-ingredient-id="16"
    //   selected="selected"
    //   value='4'

    newRow[0].removeAttribute('id');

    var selectElems = newRow.find('select');
    selectElems[0].setAttribute('name', newName + '[ingredient_id]');
    selectElems[0].setAttribute('id',   newId   + 'ingredient_id'  );

    var inputElems = newRow.find('input');
    inputElems[0].setAttribute('name', newName + '[new_ingredient]');
    inputElems[0].setAttribute('id',   newId   + 'new_ingredient'  );

    var labelElems = newRow.find('label');
    labelElems[0].setAttribute('for',   newId   + 'quantity'  );
    inputElems[1].setAttribute('name',  newName + '[quantity]');
    inputElems[1].setAttribute('id',    newId   + 'quantity'  );
    inputElems[1].setAttribute('value', '' );

    labelElems[1].setAttribute ('for',  newId   + 'unit_id'  );
    selectElems[1].setAttribute('name', newName + '[unit_id]');
    selectElems[1].setAttribute('id',   newId   + 'unit_id'  );

    newRow.find('a.js-deleteIngredient')[0].setAttribute('data-recipe-ingredient-id', '');

    selectElems.find('option').each(function(i, e) {
      e.removeAttribute('selected');
    });

    ingredientTable.append(newRow);
    e.preventDefault();
  });

  $('.js-addStep').on('click', function(e) {
    var stepTable = $('#stepTable tbody');
    var newRow    = stepTable.find('tr:first').clone();
    var newRowId  = stepTable.find('tr').length;
    var newId   = `recipe_recipe_steps_attributes_${newRowId}_`;
    var newName = `recipe_steps_attributes][${newRowId}]`;
    var newStepNumber = 0;

    Array.from(stepTable.find('label + input')).forEach(function(e) {
      thisStepNumber = parseInt(e.value);
      if (thisStepNumber > newStepNumber) {
        newStepNumber = thisStepNumber;
      }
    });
    ++newStepNumber;

    // These are the attributes that need to be edited when cloning a table row.
    // The index and name values need updating:
    //   <tr id="recipe-step-id-11">
    //   "recipe[recipe_steps_attributes][0][step_id]"
    //   "recipe_recipe_steps_attributes_0_step_id"
    // and existing values need to be cleared out:
    //   data-recipe-step-id="16"
    //   $('textarea#...').text()
    //   value='4'

    newRow[0].removeAttribute('id');

    var inputElems = newRow.find('input');
    var labelElems = newRow.find('label');
    labelElems[0].setAttribute('for',   newId   + 'step_number'  );
    inputElems[0].setAttribute('name',  newName + '[step_number]');
    inputElems[0].setAttribute('id',    newId   + 'step_number'  );
    inputElems[0].setAttribute('value', newStepNumber);

    var textareaElems = newRow.find('textarea');
    labelElems[1].setAttribute   ('for',  newId   + 'step_number'  );
    textareaElems[0].setAttribute('name', newName + '[description]');
    textareaElems[0].setAttribute('id',   newId   + 'description'  );
    textareaElems.text('');

    newRow.find('a.js-deleteStep')[0].setAttribute('data-recipe-step-id', '');

    stepTable.append(newRow);
    e.preventDefault();
  });

  //  Delete a recipe ingredient from the recipe.
  $('.js-deleteIngredient').on('click', function(e) {
    if (confirm('Are you sure?') == true) {
      // Hide the row.
      $(this).parent().parent().hide().hide();
      // Mark the row for deletion by backend.
      var recipe_ingredient_id = parseInt($(this).data('recipeIngredientId'));
      if (!isNaN(recipe_ingredient_id)) {
        var deleted_recipe_ingredient_id = recipe_ingredient_id < 0 ? recipe_ingredient_id : -recipe_ingredient_id;
        $("tr#recipe-ingredient-id-" + recipe_ingredient_id + " + input:hidden").attr('value', deleted_recipe_ingredient_id);
      }
    }
    e.preventDefault();
  });
});
</script>
